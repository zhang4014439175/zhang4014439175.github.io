<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java-Base on 热爱生活与梦想</title><link>https://zhang4014439175.github.io/categories/java-base/</link><description>Recent content in Java-Base on 热爱生活与梦想</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 23 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://zhang4014439175.github.io/categories/java-base/index.xml" rel="self" type="application/rss+xml"/><item><title>正则表达式</title><link>https://zhang4014439175.github.io/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link><pubDate>Sun, 23 Jan 2022 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid><description>飞梭平台专家知识模型的开发与调试需要用到正则，因此对正则进行学习。 一、正则表达式 System.out.println(&amp;#34;-1234&amp;#34;.matches(&amp;#34;-?\\d+&amp;#34;)); System.out.println(&amp;#34;5678&amp;#34;.matches(&amp;#34;-?\\d+&amp;#34;)); System.out.println(&amp;#34;+911&amp;#34;.matches(&amp;#34;-?\\d+&amp;#34;)); System.out.println(&amp;#34;+911&amp;#34;.matches(&amp;#34;(-|\\+)?\\d+&amp;#34;)); /* Output: true true false true */ (-|\+)? 这个正则表达式表示字符串的起始字符可</description></item><item><title>Stream流的最全分类和应用</title><link>https://zhang4014439175.github.io/post/stream%E6%B5%81/</link><pubDate>Sat, 11 Dec 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/stream%E6%B5%81/</guid><description>&lt;p>        &lt;code>Java8&lt;/code> 中添加了一个新的接口类 &lt;code>Stream&lt;/code>，相当于高级版的&lt;code>Iterator&lt;/code>，通过&lt;code>Lambda&lt;/code> 表达式对集合进行各种非常便利、高效的聚合操作&lt;code>（Aggregate Operation）&lt;/code>，或者大批量数据操作&lt;code>(Bulk Data Operation）&lt;/code>。&lt;code>Stream&lt;/code>不仅可以通过串行的方式实现数据操作，还可以通过并行的方式处理大批量数据，提高数据的处理效率。
        在《java8 in action》书中，作者说目前我们在几乎所有开发中都会用到集合，但是&lt;code>目前集合在程序开发中的表现还不够完美&lt;/code>，比如你利用集合处理大量数据时，你不得不面对性能问题，不得不考虑进行并行代码的编写，这些工作都是比较繁重的，于是作者便创造了Stream 流。&lt;/p></description></item><item><title>String字符串</title><link>https://zhang4014439175.github.io/post/string/</link><pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/string/</guid><description>string是C++、java、VB等编程语言中的字符串，字符串是一个特殊的对象，属于引用类型。 在java、C#中，String类对象创建后</description></item><item><title>Java反射机制-内省(IntroSpector)</title><link>https://zhang4014439175.github.io/post/%E5%8F%8D%E5%B0%84-%E5%86%85%E7%9C%81/</link><pubDate>Sun, 13 Jun 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/%E5%8F%8D%E5%B0%84-%E5%86%85%E7%9C%81/</guid><description>开发时，经常需要使用java对象的属性来封装程序的数据(其实就是操作对象的set/get方法来设值或取值)，每次都使用反射来完成此类操作过于</description></item><item><title>Java反射机制</title><link>https://zhang4014439175.github.io/post/%E5%8F%8D%E5%B0%84/</link><pubDate>Sat, 12 Jun 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/%E5%8F%8D%E5%B0%84/</guid><description>&lt;p>        JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制。&lt;/p></description></item></channel></rss>