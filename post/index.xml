<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 换个方向前进</title><link>https://zhang4014439175.github.io/post/</link><description>Recent content in Posts on 换个方向前进</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 07 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://zhang4014439175.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Java框架-Spring设计思想</title><link>https://zhang4014439175.github.io/post/spring%E8%AE%BE%E8%AE%A1%E6%80%9D%E6%83%B3/</link><pubDate>Wed, 07 Dec 2022 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/spring%E8%AE%BE%E8%AE%A1%E6%80%9D%E6%83%B3/</guid><description>一、控制反转(IoC) IoC(Inversion of Control,控制反转) 是Spring 中一个非常非常重要的概念，它不是什么技术，而是一种解耦的设计思想。它的主要</description></item><item><title>Java框架-Spring源码（二）</title><link>https://zhang4014439175.github.io/post/spring%E6%BA%90%E7%A0%81%E4%BA%8C/</link><pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/spring%E6%BA%90%E7%A0%81%E4%BA%8C/</guid><description>一、refresh 1、prepareRefresh /** * 前戏，做容器刷新前的准备工作 * 1、设置容器的启动时间 * 2、设置活跃状态为true * 3、</description></item><item><title>Java框架-Spring源码（一）</title><link>https://zhang4014439175.github.io/post/spring%E6%BA%90%E7%A0%81%E4%B8%80/</link><pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/spring%E6%BA%90%E7%A0%81%E4%B8%80/</guid><description>https://www.bilibili.com/video/BV16q4y1n7Fd/?p=3&amp;spm_id_from=pageDriver&amp;vd_source=81d9ec453e0a2eb8337b93642bef5ce0 一、流程 1、流程 加载xml&amp;mdash;-解析xml&amp;mdash;-封装BeanDefinition&amp;mdash;-实例化&amp;mdash;-</description></item><item><title>Elasticsearch</title><link>https://zhang4014439175.github.io/post/elasticsearch/</link><pubDate>Fri, 29 Apr 2022 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/elasticsearch/</guid><description>一、es入门 1、docker安装es 、kibana docker run &amp;ndash;name elasticsearch -p 9200:9200 -p 9300:9300 -e &amp;ldquo;discovery.type=single-node&amp;rdquo; -e ES_JAVA_OPTS=&amp;quot;-Xms64m -Xmx512m&amp;quot; -v /mydata/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml -v /mydata/elasticsearch/data:/usr/share/elasticsearch/data -v /mydata/elasticsearch/plugins:/usr/share/elasticsearch/plugins -d elasticsearch:7.4.2 docker run &amp;ndash;name kibana -e ELASTICSEARCH_HOSTS=http://192.168.56.102:9200 -p 5601:5601 -d kibana:7.4.2 2、查看节点信息 http://192.168.56.10:9200/_cat/nodes 3、官方文</description></item><item><title>RabbitMQ（二）</title><link>https://zhang4014439175.github.io/post/rabbitmq%E4%BA%8C/</link><pubDate>Tue, 15 Mar 2022 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/rabbitmq%E4%BA%8C/</guid><description>一、延迟队列（SpringBoot） 配置文件 1、基于死信完成延迟队列 死信队列参数： x-dead-letter-exchange：死信交换机 x</description></item><item><title>RabbitMQ（一）</title><link>https://zhang4014439175.github.io/post/rabbitmq%E4%B8%80/</link><pubDate>Sun, 13 Mar 2022 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/rabbitmq%E4%B8%80/</guid><description>一、简介功能 1、简介 什么是 MQ 消息队列 尚硅谷 MQ(message queue)，从字面意思上看，本质是个队列，FIFO 先入先出，只不过队列中存放的内容是 message 而已，还</description></item><item><title>docker（四）docker-compose</title><link>https://zhang4014439175.github.io/post/docker%E5%9B%9B/</link><pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/docker%E5%9B%9B/</guid><description>一、dockerfile Dockerfile是用来构建Docker镜像的文本文件，是由一条条构建镜像所需的指令和参数构成的脚本。 1、介绍 编写</description></item><item><title>docker（三）集群</title><link>https://zhang4014439175.github.io/post/docker%E4%B8%89%E5%AE%89%E8%A3%85mysql%E5%92%8Credis%E9%9B%86%E7%BE%A4/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/docker%E4%B8%89%E5%AE%89%E8%A3%85mysql%E5%92%8Credis%E9%9B%86%E7%BE%A4/</guid><description>一、mysql主从复制 新建主服务器容器实例3307 进入/mydata/mysql-master/conf目录下新建my.cnf [mysqld] ## 设置ser</description></item><item><title>docker（二）镜像</title><link>https://zhang4014439175.github.io/post/docker%E4%BA%8C/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/docker%E4%BA%8C/</guid><description>一、镜像分层 1、UnionFS（联合文件系统）： Union文件系统（UnionFS）是一种分层、轻量级并且高性能的文件系统，它支持 对文件系统</description></item><item><title>docker（一）基础</title><link>https://zhang4014439175.github.io/post/docker%E4%B8%80/</link><pubDate>Thu, 17 Feb 2022 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/docker%E4%B8%80/</guid><description>公司后端转为容器化部署。 一、docker为什么出现 希望平滑迁移 系统平滑移植，容器虚拟化技术 一次镜像，处处运行 解决了运行环境和配置问题的软件容</description></item><item><title>正则表达式</title><link>https://zhang4014439175.github.io/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link><pubDate>Sun, 23 Jan 2022 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid><description>飞梭平台专家知识模型的开发与调试需要用到正则，因此对正则进行学习。 一、正则表达式 System.out.println(&amp;#34;-1234&amp;#34;.matches(&amp;#34;-?\\d+&amp;#34;)); System.out.println(&amp;#34;5678&amp;#34;.matches(&amp;#34;-?\\d+&amp;#34;)); System.out.println(&amp;#34;+911&amp;#34;.matches(&amp;#34;-?\\d+&amp;#34;)); System.out.println(&amp;#34;+911&amp;#34;.matches(&amp;#34;(-|\\+)?\\d+&amp;#34;)); /* Output: true true false true */ (-|\+)? 这个正则表达式表示字符串的起始字符可</description></item><item><title>Java进阶-JVM（二）</title><link>https://zhang4014439175.github.io/post/jvm%E4%BA%8C/</link><pubDate>Sun, 19 Dec 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/jvm%E4%BA%8C/</guid><description>一、GC Roots 是什么？ 哪些对象可以作为 GC Root？看完秒懂！ 什么是是可达性分析算法？ 现代虚拟机基本都是采用可达性分析算法来判断对象是否存活，可达</description></item><item><title>Java进阶-JVM（一）</title><link>https://zhang4014439175.github.io/post/jvm%E4%B8%80/</link><pubDate>Wed, 15 Dec 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/jvm%E4%B8%80/</guid><description>一、内存结构 1、程序计数器 1.1、定义 程序计数器是一块较小的内存空间，是当前线程正在执行的那条字节码指令的地址。若当前线程正在执行的是一个本</description></item><item><title>Stream流的最全分类和应用</title><link>https://zhang4014439175.github.io/post/stream%E6%B5%81/</link><pubDate>Sat, 11 Dec 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/stream%E6%B5%81/</guid><description>&lt;p>        &lt;code>Java8&lt;/code> 中添加了一个新的接口类 &lt;code>Stream&lt;/code>，相当于高级版的&lt;code>Iterator&lt;/code>，通过&lt;code>Lambda&lt;/code> 表达式对集合进行各种非常便利、高效的聚合操作&lt;code>（Aggregate Operation）&lt;/code>，或者大批量数据操作&lt;code>(Bulk Data Operation）&lt;/code>。&lt;code>Stream&lt;/code>不仅可以通过串行的方式实现数据操作，还可以通过并行的方式处理大批量数据，提高数据的处理效率。
        在《java8 in action》书中，作者说目前我们在几乎所有开发中都会用到集合，但是&lt;code>目前集合在程序开发中的表现还不够完美&lt;/code>，比如你利用集合处理大量数据时，你不得不面对性能问题，不得不考虑进行并行代码的编写，这些工作都是比较繁重的，于是作者便创造了Stream 流。&lt;/p></description></item><item><title>String字符串</title><link>https://zhang4014439175.github.io/post/string/</link><pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/string/</guid><description>string是C++、java、VB等编程语言中的字符串，字符串是一个特殊的对象，属于引用类型。 在java、C#中，String类对象创建后</description></item><item><title>Java进阶-多线程并发-线程池</title><link>https://zhang4014439175.github.io/post/%E7%BA%BF%E7%A8%8B%E6%B1%A0/</link><pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/%E7%BA%BF%E7%A8%8B%E6%B1%A0/</guid><description>多线程并发是后端开发中常见问题，也是最难解决的问题，下功夫多研究研究，本文档是java juc 的学习笔记。 一、线程池 1、线程池概念 线程池(英语:t</description></item><item><title>Java进阶-多线程并发</title><link>https://zhang4014439175.github.io/post/%E5%B9%B6%E5%8F%91/</link><pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/%E5%B9%B6%E5%8F%91/</guid><description>多线程并发是后端开发中常见问题，也是最难解决的问题，下功夫多研究研究，本文档是java juc 的学习笔记。 一、什么是 JUC 1、进程和线程 进程是计算机中</description></item><item><title>Java框架-Spring设计思想</title><link>https://zhang4014439175.github.io/post/springmvc%E4%B8%80/</link><pubDate>Sun, 18 Jul 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/springmvc%E4%B8%80/</guid><description>一、简介 1、介绍 封装了servlet MVC是一种软件架构的思想，将软件按照模型、视图、控制器来划分 M:Model，模型层，指工程中的Java</description></item><item><title>Java框架-Spring</title><link>https://zhang4014439175.github.io/post/spring%E4%B8%80/</link><pubDate>Wed, 07 Jul 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/spring%E4%B8%80/</guid><description>一、IOC控制反转 1、概念 控制反转，把对象创建和对象之间的调用过程，交给 Spring 进行管理 使用 IOC 目的:为了耦合度降低 做入门案例就是 IOC 实现 2、底层原理</description></item><item><title>Java反射机制-内省(IntroSpector)</title><link>https://zhang4014439175.github.io/post/%E5%8F%8D%E5%B0%84-%E5%86%85%E7%9C%81/</link><pubDate>Sun, 13 Jun 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/%E5%8F%8D%E5%B0%84-%E5%86%85%E7%9C%81/</guid><description>开发时，经常需要使用java对象的属性来封装程序的数据(其实就是操作对象的set/get方法来设值或取值)，每次都使用反射来完成此类操作过于</description></item><item><title>MySql基础（四）</title><link>https://zhang4014439175.github.io/post/mysql%E5%9B%9B/</link><pubDate>Sun, 13 Jun 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/mysql%E5%9B%9B/</guid><description>一、变量 在MySQL数据库的存储过程和函数中，可以使用变量来存储查询或计算的中间结果数据，或者输出最终 的结果数据。 在 MySQL 数据库中，变量分为系统</description></item><item><title>Java反射机制</title><link>https://zhang4014439175.github.io/post/%E5%8F%8D%E5%B0%84/</link><pubDate>Sat, 12 Jun 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/%E5%8F%8D%E5%B0%84/</guid><description>&lt;p>        JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制。&lt;/p></description></item><item><title>MySql基础（三）</title><link>https://zhang4014439175.github.io/post/mysql%E4%B8%89/</link><pubDate>Sat, 12 Jun 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/mysql%E4%B8%89/</guid><description>一、约束 1、为什么需要约束 数据完整性(Data Integrity)是指数据的精确性(Accuracy)和可靠性(Reliability)。它</description></item><item><title>MySql基础（二）</title><link>https://zhang4014439175.github.io/post/mysql%E4%BA%8C/</link><pubDate>Sat, 12 Jun 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/mysql%E4%BA%8C/</guid><description>一、分页 1、公式 LIMIT [位置偏移量,] 行数 举例 --前10条记录: SELECT*FROM表名LIMIT0,10;或者SELECT*FROM表名LI</description></item><item><title>MySql基础入门安装教程</title><link>https://zhang4014439175.github.io/post/mysql%E5%AE%89%E8%A3%85/</link><pubDate>Fri, 11 Jun 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/mysql%E5%AE%89%E8%A3%85/</guid><description>&lt;p>        MySQL是一种关系型数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。MySQL所使用的 SQL 语言是用于访问数据库的最常用标准化语言。MySQL 软件采用了双授权政策，分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型网站的开发都选择 MySQL 作为网站数据库。&lt;/p></description></item><item><title>MySql基础（一）</title><link>https://zhang4014439175.github.io/post/mysql%E5%9F%BA%E7%A1%8001/</link><pubDate>Fri, 11 Jun 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/mysql%E5%9F%BA%E7%A1%8001/</guid><description>&lt;p>        MySQL是一种关系型数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。MySQL所使用的 SQL 语言是用于访问数据库的最常用标准化语言。MySQL 软件采用了双授权政策，分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型网站的开发都选择 MySQL 作为网站数据库。&lt;/p></description></item><item><title>Java框架-MybatisPlus</title><link>https://zhang4014439175.github.io/post/mybatis-plus/</link><pubDate>Sat, 15 May 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/mybatis-plus/</guid><description>一、条件构造 子查询 queryWrapper.inSql(&amp;ldquo;id&amp;rdquo;, &amp;ldquo;select id from t_user where id &amp;lt;= 3&amp;rdquo;); 组装参数条件 queryWrapper .like(StringUtils.isNotBlank(username), &amp;#34;username&amp;#34;, &amp;#34;a&amp;#34;) .ge(ageBegin != null, &amp;#34;age&amp;#34;, ageBegin) .le(ageEnd != null, &amp;#34;age&amp;#34;, ageEnd); 二、分页 1、添加配置类 @Configuration @MapperScan(&amp;#34;com.atguigu.mybatisplus.mapper&amp;#34;) //可以将主类中的注解移到此处 public class MybatisPlusConfig {</description></item><item><title>Java框架-MybatisPlus</title><link>https://zhang4014439175.github.io/post/mybatis%E4%B8%80/</link><pubDate>Sat, 15 May 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/mybatis%E4%B8%80/</guid><description>一、特性 MyBatis 是支持定制化 SQL、存储过程以及高级映射的优秀的持久层框架 2) MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集 MyBatis可以</description></item></channel></rss>