<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>线程池 on 换个方向前进</title><link>https://zhang4014439175.github.io/tags/%E7%BA%BF%E7%A8%8B%E6%B1%A0/</link><description>Recent content in 线程池 on 换个方向前进</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 21 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://zhang4014439175.github.io/tags/%E7%BA%BF%E7%A8%8B%E6%B1%A0/index.xml" rel="self" type="application/rss+xml"/><item><title>Java进阶-多线程并发-线程池</title><link>https://zhang4014439175.github.io/post/%E7%BA%BF%E7%A8%8B%E6%B1%A0/</link><pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate><guid>https://zhang4014439175.github.io/post/%E7%BA%BF%E7%A8%8B%E6%B1%A0/</guid><description>&lt;p>        一种线程使用模式。线程过多会带来调度开销， 进而影响缓存局部性和整体性能。而线程池维护着多个线程，等待着监督管理 者分配可并发执行的任务。这避免了在处理短时间任务时创建与销毁线程的代 价。线程池不仅能够保证内核的充分利用，还能防止过分调度。
        多线程并发是后端开发中常见问题，也是最难解决的问题，下功夫多研究研究，本文档是java juc 的学习笔记。&lt;/p></description></item></channel></rss>